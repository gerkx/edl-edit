{"version":3,"sources":["javascript/app.js"],"names":["startTime","fps","dropArea","document","querySelector","manualFile","getElementById","link","dropped","fileChecker","file","fileSplit","name","split","length","alert","fileName","read","FileReader","onload","download","result","map","line","idx","arr","offsetSourceClipTC","reduce","accum","val","readAsText","tcToFrames","str","units","num","parseInt","frames","framesToTC","sec","Math","floor","fr","min","hour","padZero","tcLine","lineArr","origStartFrame","newEndTime","zeros","toString","text","filename","element","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","updateButton","fileBtn","innerHTML","addEventListener","e","preventDefault","stopPropagation","classList","add","remove","dataTransfer","files","srcElement"],"mappings":"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","file":"app.fc86a94e.map","sourceRoot":"..","sourcesContent":["// const util = require('./utils/util');\n// const fileIn = require('./components/file-in');\n\nconst startTime = \"00:00:00:00\";\nconst fps = 25;\nconst dropArea = document.querySelector('.edl__file-zone');\nconst manualFile = document.getElementById('file-in');\nconst link = document.getElementById(\"file\");\nlet dropped = 0;\n\ndropArea.addEventListener(\"dragover\", e => {\n  e.preventDefault();\n  e.stopPropagation();\n  dropArea.classList.add('edl__file-zone--active');\n});\n\ndropArea.addEventListener(\"dragleave\", e => {\n  e.preventDefault();\n  e.stopPropagation();\n  dropArea.classList.remove('edl__file-zone--active');\n  dropped = 0;\n});\n\ndropArea.addEventListener(\"drop\", e => {\n  e.preventDefault();\n  e.stopPropagation();\n  dropArea.classList.remove('edl__file-zone--active');\n  const file = e.dataTransfer.files[0];\n  dropped += 1;\n  fileChecker(file);\n});\n\nlink.addEventListener(\"change\", e => {\n  e.preventDefault();\n  e.stopPropagation();\n  const file = e.srcElement.files[0];\n  // console.log(link.value)\n\n  // const file = e.dataTransfer.files[0];\n  // console.log(file);\n  dropped += 1;\n  fileChecker(file);\n})\n\n\n\nfunction fileChecker(file) {\n  const fileSplit = file.name.split(\".\");\n  const ext = fileSplit[fileSplit.length-1];\n  if(ext !== \"edl\") {\n    alert(\"Elige un EDL, por favor\")\n  }\n  if(dropped == 1) {\n    // alert(\"file dropped\");\n    let fileName = file.name;\n    let read = new FileReader();\n    read.onload = function() {\n      // updateButton(fileName);\n      const content = read.result.split(\"\\n\")\n      .map((line, idx, arr) => {\n          if(idx > 1 && arr[idx-1].length <= 1)  {\n\n              return offsetSourceClipTC(line)\n          }else{\n              return line\n          } \n      })\n      .reduce((accum, val) => {\n          return accum += val + \"\\n\"\n      }, \"\");\n      const file = `${fileName.split(\".\")[0]}_rev.edl`;\n      download(content, file);\n      // dropped = 0;\n    }\n    read.readAsText(file);\n  }\n\n  \n}\n\nfunction tcToFrames (str) {\n  const units = str.split(\":\").map(num => parseInt(num, 10));\n  let frames = (units[0]*3600 + units[1]*60 + units[2])*fps+units[3];\n  return frames\n}\n\nfunction framesToTC (frames) {\n  let sec = Math.floor(frames/25);\n  frames -= sec*fps\n  let fr = frames%25\n  let min = Math.floor(sec/60);\n  sec -= min*60;\n  let hour = Math.floor(min/60);\n  min -= hour*60;\n  return `${padZero(hour, 2)}:${padZero(min,2)}:${padZero(sec,2)}:${padZero(fr,2)}`\n}\n\nfunction offsetSourceClipTC(tcLine) {\n  \n  const lineArr = tcLine.split(/\\s+/);               \n  const origStartFrame = tcToFrames(lineArr[4]);\n  const origEndFrame = tcToFrames(lineArr[5]);\n  const newStartFrame = tcToFrames(startTime);\n  const frameOffset = origStartFrame - newStartFrame;\n  const newEndTime = framesToTC(origEndFrame - frameOffset);\n  return `${lineArr[0]}  ${lineArr[1]}       V  ${lineArr[3]}        ${startTime} ${newEndTime} ${lineArr[6]} ${lineArr[7]}`\n}\n\nfunction padZero(num, zeros) {\n  num = num.toString();\n  while(num.length < zeros){\n      num = \"0\" + num;\n  }\n  return num\n}\n\nfunction download(text, filename) {\n  const element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n}\n\nfunction updateButton(str) {\n  fileBtn.innerHTML = str;\n}"]}